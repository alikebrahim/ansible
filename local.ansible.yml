---
- name: Clone Repositories
  hosts: localhost
  connection: local
  become: false
  vars_files:
    - group_vars/all.yml
  
  tasks:
    - name: Ensure project directories exist
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: "{{ real_user }}"
        group: "{{ real_user }}"
      with_items:
        - "{{ real_user_home }}/.local/src"
        - "{{ real_user_home }}/Documents"
      tags: [git_repositories, repositories]
    
    - name: Clone development tool repositories
      ansible.builtin.git:
        repo: "{{ item.repo }}"
        dest: "{{ item.dest }}"
        clone: true
        update: true
        force: true
        depth: "{{ item.depth | default(omit) }}"
      with_items:
        - { repo: "https://github.com/neovim/neovim", dest: "{{ real_user_home }}/.local/src/neovim" }
        - { repo: "https://github.com/tmux/tmux.git", dest: "{{ real_user_home }}/.local/src/tmux" }
        - { repo: "https://github.com/aristocratos/btop.git", dest: "{{ real_user_home }}/.local/src/btop" }
        - { repo: "https://github.com/junegunn/fzf.git", dest: "{{ real_user_home }}/.local/src/fzf", depth: 1 }
      tags: [git_repositories, repositories, devtools]

- name: Configure System Environment
  hosts: localhost
  connection: local
  become: true
  vars_files:
    - group_vars/all.yml
  pre_tasks:
    - name: Stop PackageKit service
      ansible.builtin.systemd_service:
        name: packagekit.service
        masked: true
        state: stopped
      become: true
      ignore_errors: true
      tags: [always, system]
      
    - name: Install required Ansible collections
      ansible.builtin.command: ansible-galaxy collection install community.general
      register: collection_install
      changed_when: "'Installing' in collection_install.stdout"
      failed_when: collection_install.rc != 0
      tags: [always, system]
  
  roles:
    - system_packages
    - common
  
  tasks:
    - name: Include system-level language tasks
      ansible.builtin.include_tasks: roles/development/tasks/system/languages.yml
      tags: [languages, system, development]
    
    - name: Include system-level build tasks
      ansible.builtin.include_tasks: roles/development/tasks/system/build.yml
      tags: [build, system, development]
  
  post_tasks:
    - name: Start PackageKit service
      ansible.builtin.service:
        name: packagekit.service
        masked: false
        state: started
      become: true
      ignore_errors: true
      tags: [always, system]

- name: Configure User Environment
  hosts: localhost
  connection: local
  become: false
  vars_files:
    - group_vars/all.yml
  
  roles:
    - { role: development, tags: ['user', 'development'] }
    - dotfiles
    - apps
    - shell
    - terminal
    - fonts
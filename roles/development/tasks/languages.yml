---
# Programming languages installation and setup

# Go
- name: Get Go latest version
  ansible.builtin.shell:
    cmd: curl -Ls "https://golang.org/dl/?mode=json" | jq -r '.[0].version'
  register: go_version
  tags: [go, languages]
  changed_when: false

- name: Install Go
  ansible.builtin.unarchive:
    src: https://go.dev/dl/{{ go_version.stdout }}.linux-amd64.tar.gz
    dest: "/usr/local"
    creates: "/usr/local/go/"
    remote_src: true
  become: true
  tags: [go, languages]

- name: Create Go directories
  ansible.builtin.file:
    path: "{{ ansible_user_home }}/go/{{ item }}"
    state: directory
    owner: "{{ ansible_user_real }}"
    group: "{{ ansible_user_real }}"
    mode: '0755'
  loop:
    - src
    - pkg
    - bin
  tags: [go, languages]

- name: Install Go packages
  environment:
    PATH: /usr/local/go/bin:{{ ansible_env.PATH }}
    GOPATH: "{{ ansible_user_home }}/go"
  ansible.builtin.command:
    cmd: go install {{ item }}
    creates: "{{ ansible_user_home }}/go/bin/{{ item.split('/')[-1].split('@')[0] }}"
  loop:
    - github.com/air-verse/air@latest
    - github.com/jesseduffield/lazygit@latest
    - github.com/go-delve/delve/cmd/dlv@latest
  become: false
  tags: [go, languages]

# Rust
- name: Download Rust installer
  ansible.builtin.get_url:
    url: "https://sh.rustup.rs"
    dest: "/tmp/rustup.sh"
    mode: '0755'
  tags: [rust, languages]

- name: Install Rust
  ansible.builtin.shell: sh /tmp/rustup.sh -y
  args:
    creates: "{{ ansible_user_home }}/.cargo/bin/rustc"
  become: false
  tags: [rust, languages]

- name: Source cargo env to activate it
  ansible.builtin.shell:
    cmd: ". {{ ansible_user_home }}/.cargo/env"
  args:
    executable: "/bin/bash"
  become: false
  tags: [rust, languages]
  changed_when: false

# NVM & Node
- name: Install Node Version Manager (NVM)
  ansible.builtin.shell:
    cmd: bash -c 'curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash'
  args:
    creates: "{{ ansible_user_home }}/.nvm/nvm.sh"
  environment:
    PROFILE: "/dev/null"
  become: false
  tags: [nvm, node, languages]

- name: Source NVM and Install Node
  ansible.builtin.shell:
    cmd: |
      source {{ ansible_user_home }}/.nvm/nvm.sh
      nvm install node
  environment:
    PROFILE: "/dev/null"
  args:
    executable: /bin/bash
  become: false
  tags: [nvm, node, languages]
  register: node_install
  changed_when: "'is now installed' in node_install.stdout"

# Python
- name: Install pyenv
  ansible.builtin.shell:
    cmd: curl https://pyenv.run | bash
  args:
    creates: "{{ ansible_user_home }}/.pyenv"
  environment:
    PROFILE: /dev/null
  become: false
  tags: [pyenv, languages]

- name: Install uv Python Manager
  ansible.builtin.shell: curl -LsSf https://astral.sh/uv/install.sh | sh
  args:
    creates: "{{ ansible_user_home }}/.cargo/bin/uv"
  become: true
  tags: [languages, python]

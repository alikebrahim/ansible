---
# Development tools build tasks

# Neovim
- name: Check if Neovim source directory exists
  ansible.builtin.stat:
    path: "{{ ansible_user_home }}/.local/src/neovim"
  register: neovim_src_dir
  tags: [build, neovim]

- name: Compile & Install Neovim
  ansible.builtin.shell:
    cmd: make CMAKE_BUILD_TYPE=RelWithDebInfo && make install
    chdir: "{{ ansible_user_home }}/.local/src/neovim"
  become: true
  when: neovim_src_dir.stat.exists
  tags: [build, neovim]
  register: neovim_build
  changed_when: "'[100%]' in neovim_build.stdout"

# Tmux
- name: Check if Tmux source directory exists
  ansible.builtin.stat:
    path: "{{ ansible_user_home }}/.local/src/tmux"
  register: tmux_src_dir
  tags: [build, tmux]

- name: Compile & Install Tmux
  ansible.builtin.shell:
    cmd: sh autogen.sh && ./configure && make && make install
    chdir: "{{ ansible_user_home }}/.local/src/tmux"
  become: true
  when: tmux_src_dir.stat.exists
  tags: [build, tmux]
  register: tmux_build
  changed_when: "'installing' in tmux_build.stdout"

# Btop
- name: Check if Btop source directory exists
  ansible.builtin.stat:
    path: "{{ ansible_user_home }}/.local/src/btop"
  register: btop_src_dir
  tags: [build, btop]

- name: Compile & Install Btop
  ansible.builtin.shell:
    cmd: make ADDFLAGS=-march=native && make install
    chdir: "{{ ansible_user_home }}/.local/src/btop"
  become: true
  when: btop_src_dir.stat.exists
  tags: [build, btop]
  register: btop_build
  changed_when: "'installing' in btop_build.stdout"

# fzf
- name: Install fzf
  ansible.builtin.shell:
    cmd: "{{ ansible_user_home }}/.local/src/fzf/install --no-bash --no-fish --completion --key-binding --no-update-rc"
  become: false
  tags: [build, fzf]
  register: fzf_install
  changed_when: "'Installed' in fzf_install.stdout"
